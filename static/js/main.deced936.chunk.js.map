{"version":3,"sources":["Components/Player/player.js","Components/StartPage/startPage.js","Components/WinnerModal/winnerModal.js","Container/App.js","reportWebVitals.js","index.js"],"names":["player","props","_jsxs","className","active","children","_jsx","name","num","score","startPage","onSubmit","event","startHandler","type","onChange","initializeNames","winnerModal","show","onClick","clicked","FontAwesomeIcon","icon","faTrophy","winnerName","id","tableInitialState","App","table","setTable","useState","prevValue","setPrevValue","playerActive","setPlayerActive","names","setNames","start","setStart","showModal","setShowModal","winner","setWinner","playersScore","setPlayersScore","closeWinnerModal","restartHandler","temp","generateCells","cellsArray","i","j","push","changeCell","Math","random","row","column","content","StartPage","idx","preventDefault","target","value","length","WinnerModal","PlayerCard","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.deced936.chunk.js","sourcesContent":["import React from 'react';\r\nimport './player.css';\r\n\r\nconst player = props => (\r\n  <div className={props.active ? 'card active' : 'card'}>\r\n    <h1>{props.name}</h1>\r\n    <p className=\"title\">Player {props.num === '1' ? 'X' : 'O'}</p>\r\n    <p className=\"score\">Score: {props.score}</p>\r\n  </div>\r\n);\r\n\r\nexport default player;\r\n","import React from 'react';\r\n\r\nimport './startPage.css';\r\n\r\nconst startPage = props => (\r\n  <div className=\"modal\">\r\n    <h2>Type your name</h2>\r\n    <form onSubmit={event => props.startHandler(event)}>\r\n      <div className=\"user-box\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={event => props.initializeNames(event, 0)}\r\n        />\r\n        <label>Player X</label>\r\n      </div>\r\n      <div className=\"user-box\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={event => props.initializeNames(event, 1)}\r\n        />\r\n        <label>Player O</label>\r\n      </div>\r\n      <button type=\"submit\" className=\"button-submit\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default startPage;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './winnerModal.css';\r\n\r\nconst winnerModal = props => (\r\n  <div>\r\n    {props.show ? (\r\n      <div className=\"Backdrop\" onClick={props.clicked}></div>\r\n    ) : null}\r\n    {props.show ? (\r\n      <div className=\"popup center active\">\r\n        <div className=\"icon\">\r\n          <FontAwesomeIcon icon={faTrophy} className=\"trophy\" />\r\n        </div>\r\n        <div className=\"title\">{props.winnerName} a castigat!</div>\r\n        <div className=\"description\">Esti prea jmecher la jocu asta ðŸ¥³</div>\r\n        <div className=\"dismiss-btn\">\r\n          <button id=\"dismiss-popup-btn\" onClick={props.clicked}>\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"popup center\">\r\n        <div className=\"icon\">\r\n          <FontAwesomeIcon icon={faTrophy} className=\"trophy\" />\r\n        </div>\r\n        <div className=\"title\">{props.winnerName}!</div>\r\n        <div className=\"dismiss-btn\">\r\n          <button id=\"dismiss-popup-btn\" onClick={props.clicked}>\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default winnerModal;\r\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport PlayerCard from '../Components/Player/player';\nimport StartPage from '../Components/StartPage/startPage';\nimport WinnerModal from '../Components/WinnerModal/winnerModal';\n\nconst tableInitialState = [\n  ['', '', ''],\n  ['', '', ''],\n  ['', '', ''],\n];\n\nconst App = () => {\n  const [table, setTable] = useState(tableInitialState);\n  const [prevValue, setPrevValue] = useState('');\n  const [playerActive, setPlayerActive] = useState(true);\n  const [names, setNames] = useState([]);\n  const [start, setStart] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [winner, setWinner] = useState('');\n  const [playersScore, setPlayersScore] = useState([0, 0]);\n\n  const initializeNames = (event, idx) => {\n    event.preventDefault();\n\n    names[idx] = event.target.value;\n\n    setNames(names);\n  };\n\n  const startGame = event => {\n    event.preventDefault();\n\n    if (names.length === 2) {\n      setStart(false);\n    }\n  };\n\n  const closeWinnerModal = () => {\n    setShowModal(false);\n  };\n\n  const restartHandler = () => {\n    setTable([\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', ''],\n    ]);\n\n    let temp = names[0];\n    names[0] = names[1];\n    names[1] = temp;\n\n    temp = playersScore[0];\n    playersScore[0] = playersScore[1];\n    playersScore[1] = temp;\n\n    setNames(names);\n    setPlayersScore(playersScore);\n    setPrevValue('');\n    setPlayerActive(names[0]);\n    setWinner('');\n  };\n\n  const generateCells = () => {\n    let cellsArray = [];\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        cellsArray.push(\n          <div\n            key={Math.random()}\n            className=\"box\"\n            onClick={() => changeCell(i, j)}\n          >\n            {table[i][j]}\n          </div>\n        );\n      }\n    }\n\n    return cellsArray;\n  };\n\n  const changeCell = (row, column) => {\n    if (winner === '') {\n      if (table[row][column] === '') {\n        if (prevValue === '') {\n          table[row][column] = 'X';\n        } else if (prevValue === 'X') {\n          table[row][column] = 'O';\n        } else if (prevValue === 'O') {\n          table[row][column] = 'X';\n        }\n\n        setPlayerActive(!playerActive);\n        setPrevValue(table[row][column]);\n        setTable(table);\n\n        if (\n          (table[0][0] === 'X' && table[0][1] === 'X' && table[0][2] === 'X') ||\n          (table[0][0] === 'X' && table[1][0] === 'X' && table[2][0] === 'X') ||\n          (table[2][0] === 'X' && table[2][1] === 'X' && table[2][2] === 'X') ||\n          (table[0][2] === 'X' && table[1][2] === 'X' && table[2][2] === 'X') ||\n          (table[1][0] === 'X' && table[1][1] === 'X' && table[1][2] === 'X') ||\n          (table[0][1] === 'X' && table[1][1] === 'X' && table[2][1] === 'X') ||\n          (table[0][0] === 'X' && table[1][1] === 'X' && table[2][2] === 'X') ||\n          (table[2][0] === 'X' && table[1][1] === 'X' && table[0][2] === 'X')\n        ) {\n          playersScore[0]++;\n          setPlayersScore(playersScore);\n          setShowModal(true);\n          setWinner(names[0]);\n        } else if (\n          (table[0][0] === 'O' && table[0][1] === 'O' && table[0][2] === 'O') ||\n          (table[0][0] === 'O' && table[1][0] === 'O' && table[2][0] === 'O') ||\n          (table[2][0] === 'O' && table[2][1] === 'O' && table[2][2] === 'O') ||\n          (table[0][2] === 'O' && table[1][2] === 'O' && table[2][2] === 'O') ||\n          (table[1][0] === 'O' && table[1][1] === 'O' && table[1][2] === 'O') ||\n          (table[0][1] === 'O' && table[1][1] === 'O' && table[2][1] === 'O') ||\n          (table[0][0] === 'O' && table[1][1] === 'O' && table[2][2] === 'O') ||\n          (table[2][0] === 'O' && table[1][1] === 'O' && table[0][2] === 'O')\n        ) {\n          playersScore[1]++;\n          setPlayersScore(playersScore);\n          setShowModal(true);\n          setWinner(names[1]);\n        }\n      }\n    }\n  };\n\n  let content = (\n    <StartPage initializeNames={initializeNames} startHandler={startGame} />\n  );\n\n  if (!start) {\n    content = (\n      <div className=\"App\">\n        <WinnerModal\n          winnerName={winner}\n          clicked={closeWinnerModal}\n          show={showModal}\n        />\n        <PlayerCard\n          name={names[0]}\n          num=\"1\"\n          active={playerActive}\n          score={playersScore[0]}\n        />\n        <div className=\"game-board\">{generateCells()}</div>\n        <PlayerCard\n          name={names[1]}\n          num=\"2\"\n          active={!playerActive}\n          score={playersScore[1]}\n        />\n        <div id=\"restart\" className=\"buttonBox\" onClick={restartHandler}>\n          <button className=\"restart-button\" onClick={restartHandler}>\n            Restart\n          </button>\n          <div className=\"border\"></div>\n          <div className=\"border\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}